<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Snowgan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://snowgan.com/"/>
  <updated>2016-12-17T15:41:38.000Z</updated>
  <id>http://snowgan.com/</id>
  
  <author>
    <name>Snowgan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Javascript数组笔记</title>
    <link href="http://snowgan.com/2016/12/02/Javascript%E6%95%B0%E7%BB%84%E7%AC%94%E8%AE%B0/"/>
    <id>http://snowgan.com/2016/12/02/Javascript数组笔记/</id>
    <published>2016-12-02T08:02:45.000Z</published>
    <updated>2016-12-17T15:41:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>数组的每一项可以保存任意类型的数据</p>
<h3 id="1-数组创建"><a href="#1-数组创建" class="headerlink" title="1. 数组创建"></a>1. 数组创建</h3><p>创建数组有两种方式（多使用第二种方式）：</p>
<ol>
<li><p>使用Array构造函数</p>
<p><code>var arr1 = new Array( &quot;hello&quot;, &quot;world&quot; );</code></p>
</li>
<li><p>使用字面量形式[]</p>
<p><code>var arr2 = [ &quot;hello&quot;, &quot;world&quot; ];</code></p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 数组类型判断（若Array的toString方法被重写，则不适用）：</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isArray</span>(<span class="params">obj</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(obj) === <span class="string">'[object Array]'</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-常用属性和方法"><a href="#2-常用属性和方法" class="headerlink" title="2. 常用属性和方法"></a>2. 常用属性和方法</h3><h4 id="2-1-length"><a href="#2-1-length" class="headerlink" title="2.1 .length"></a>2.1 .length</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Length of an array</span></div><div class="line"><span class="keyword">var</span> myArray = [ <span class="string">"hello"</span>, <span class="string">"world"</span>, <span class="string">"!"</span> ];</div><div class="line"><span class="built_in">console</span>.log( myArray.length ); <span class="comment">// 3</span></div><div class="line"><span class="comment">// Empty array</span></div><div class="line">myArray.length = <span class="number">0</span>;</div><div class="line"><span class="built_in">console</span>.log( myArray ); <span class="comment">// myArray =&gt; []</span></div><div class="line"><span class="comment">// truncate array</span></div><div class="line">myArray.length = <span class="number">2</span>;</div><div class="line"><span class="built_in">console</span>.log( myArray ); <span class="comment">// myArray =&gt; [ "hello", "world"]</span></div><div class="line">myArray.length = <span class="number">4</span>;</div><div class="line"><span class="built_in">console</span>.log( myArray ); <span class="comment">// myArray =&gt; [ "hello", "world", "!", undefined]</span></div></pre></td></tr></table></figure>
<h4 id="2-2-concat"><a href="#2-2-concat" class="headerlink" title="2.2 .concat()"></a>2.2 .concat()</h4><p>连接两个数组</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myArray = [ <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> ];</div><div class="line"><span class="keyword">var</span> myOtherArray = [ <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span> ];</div><div class="line"><span class="keyword">var</span> wholeArray = myArray.concat( myOtherArray ); <span class="comment">// [ 2, 3, 4, 5, 6, 7 ]</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="2-3-join"><a href="#2-3-join" class="headerlink" title="2.3 .join()"></a>2.3 .join()</h4><p>连接数组内的各个元素，可指定分隔符</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Joining elements</span></div><div class="line"><span class="keyword">var</span> myArray = [ <span class="string">"hello"</span>, <span class="string">"world"</span>, <span class="string">"!"</span> ];</div><div class="line"><span class="comment">// The default separator is a comma.</span></div><div class="line"><span class="built_in">console</span>.log( myArray.join() ); <span class="comment">// "hello,world,!"</span></div><div class="line"><span class="comment">// Any string can be used as separator...</span></div><div class="line"><span class="built_in">console</span>.log( myArray.join( <span class="string">" "</span> ) ); <span class="comment">// "hello world !";</span></div><div class="line"><span class="built_in">console</span>.log( myArray.join( <span class="string">"!!"</span> ) ); <span class="comment">// "hello!!world!!!";</span></div><div class="line"><span class="comment">// ...including an empty one.</span></div><div class="line"><span class="built_in">console</span>.log( myArray.join( <span class="string">""</span> ) ); <span class="comment">// "helloworld!"</span></div></pre></td></tr></table></figure>
<h4 id="2-4-push-amp-pop"><a href="#2-4-push-amp-pop" class="headerlink" title="2.4 .push() &amp; .pop()"></a>2.4 .push() &amp; .pop()</h4><p>在数组尾部添加或删除元素</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Pushing and popping</span></div><div class="line"><span class="keyword">var</span> myArray = [];</div><div class="line">myArray.push( <span class="number">0</span> ); <span class="comment">// [ 0 ]</span></div><div class="line">myArray.push( <span class="number">2</span> ); <span class="comment">// [ 0 , 2 ]</span></div><div class="line">myArray.push( <span class="number">7</span> ); <span class="comment">// [ 0 , 2 , 7 ]</span></div><div class="line">myArray.pop(); <span class="comment">// [ 0 , 2 ]</span></div></pre></td></tr></table></figure>
<h4 id="2-5-unshift-amp-shift"><a href="#2-5-unshift-amp-shift" class="headerlink" title="2.5 .unshift() &amp; .shift()"></a>2.5 .unshift() &amp; .shift()</h4><p>在数组头部添加或删除元素</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myArray = [];</div><div class="line">myArray.unshift( <span class="number">0</span> ); <span class="comment">// [ 0 ]</span></div><div class="line">myArray.unshift( <span class="number">2</span> ); <span class="comment">// [ 2 , 0 ]</span></div><div class="line">myArray.unshift( <span class="number">7</span> ); <span class="comment">// [ 7 , 2 , 0 ]</span></div><div class="line">myArray.shift(); <span class="comment">// [ 2, 0 ]</span></div></pre></td></tr></table></figure>
<h4 id="2-6-reverse"><a href="#2-6-reverse" class="headerlink" title="2.6 .reverse()"></a>2.6 .reverse()</h4><p>使数组元素倒序</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myArray = [ <span class="string">"world"</span> , <span class="string">"hello"</span> ];</div><div class="line">myArray.reverse(); <span class="comment">// [ "hello", "world" ]</span></div></pre></td></tr></table></figure>
<h4 id="2-7-indexOf-amp-lastIndexOf"><a href="#2-7-indexOf-amp-lastIndexOf" class="headerlink" title="2.7 .indexOf() &amp; .lastIndexOf()"></a>2.7 .indexOf() &amp; .lastIndexOf()</h4><p>搜索指定值在数组中的位置，没找到返回-1. lastIndexOf()从后往前搜索</p>
<p>传入两个参数：</p>
<p>value: 要搜索的值</p>
<p>index: 开始搜索位置</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myArray = [ <span class="string">"world"</span> , <span class="string">"hello"</span> , <span class="string">"!"</span> , <span class="string">"world"</span> , <span class="string">"hello"</span>, <span class="string">"!"</span>];</div><div class="line"><span class="built_in">console</span>.log(myArray.indexOf(<span class="string">"!"</span>)); <span class="comment">//2</span></div><div class="line"><span class="built_in">console</span>.log(myArray.indexOf(<span class="string">"!"</span>, <span class="number">3</span>)); <span class="comment">//5</span></div><div class="line"><span class="built_in">console</span>.log(myArray.lastIndexOf(<span class="string">"!"</span>, <span class="number">3</span>)); <span class="comment">//2</span></div><div class="line"><span class="built_in">console</span>.log(myArray.lastIndexOf(<span class="string">"!"</span>, <span class="number">1</span>)); <span class="comment">//-1</span></div></pre></td></tr></table></figure>
<h4 id="2-8-slice"><a href="#2-8-slice" class="headerlink" title="2.8 .slice()"></a>2.8 .slice()</h4><p><code>slice([begin[, end]])</code></p>
<p>返回一个从begin开始到end结束但不包括end位置的新数组，begin和end可为负数</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myArray = [ <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span> ];</div><div class="line"><span class="keyword">var</span> newArray = myArray.slice( <span class="number">3</span> );</div><div class="line"><span class="built_in">console</span>.log( myArray ); <span class="comment">// [ 1, 2, 3, 4, 5, 6, 7, 8 ]</span></div><div class="line"><span class="built_in">console</span>.log( newArray ); <span class="comment">// [ 4, 5, 6, 7, 8 ]</span></div><div class="line">newArray = myArray.slice( <span class="number">-3</span> );</div><div class="line"><span class="built_in">console</span>.log( newArray ); <span class="comment">// [ 6, 7, 8 ]</span></div><div class="line">newArray = myArray.slice( <span class="number">2</span>, <span class="number">-3</span> );</div><div class="line"><span class="built_in">console</span>.log( newArray ); <span class="comment">// [ 3, 4, 5 ]</span></div><div class="line">newArray = myArray.slice( <span class="number">5</span>, <span class="number">-3</span> );</div><div class="line"><span class="built_in">console</span>.log( newArray ); <span class="comment">// []</span></div></pre></td></tr></table></figure>
<h4 id="2-9-splice"><a href="#2-9-splice" class="headerlink" title="2.9 .splice()"></a>2.9 .splice()</h4><p><code>myArray.splice( index, length, values, ... )</code></p>
<p>index: 开始位置</p>
<p>length: 删除元素个数</p>
<p>values: 添加元素，插入到index指定的位置</p>
<p>该函数返回被删除的元素</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myArray = [ <span class="number">0</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">5</span> ];</div><div class="line"><span class="keyword">var</span> res = myArray.splice( <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> );</div><div class="line"><span class="built_in">console</span>.log( myArray ); <span class="comment">// [ 0, 1, 2, 3, 4, 5 ]</span></div><div class="line"><span class="built_in">console</span>.log( res ); <span class="comment">// [7, 8]</span></div></pre></td></tr></table></figure>
<h4 id="2-10-sort"><a href="#2-10-sort" class="headerlink" title="2.10 .sort()"></a>2.10 .sort()</h4><p>数组排序，默认升序排列。可传入一个函数参数，该函数定义了排序规则</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myArray = [ <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">1</span> ];</div><div class="line">myArray.sort(); <span class="comment">// 1, 3, 4, 6</span></div><div class="line"></div><div class="line"><span class="comment">// Sorting with comparing function.</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">descending</span>(<span class="params"> a, b </span>) </span>&#123;</div><div class="line">	<span class="keyword">return</span> b - a;  <span class="comment">// 如果a应排在b前，则返回负数，反之则返回正数</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> myArray = [ <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">1</span> ];</div><div class="line">myArray.sort( descending ); <span class="comment">// [ 6, 4, 3, 1 ]</span></div></pre></td></tr></table></figure>
<h4 id="2-11-迭代方法"><a href="#2-11-迭代方法" class="headerlink" title="2.11 迭代方法"></a>2.11 迭代方法</h4><p><code>.every(function(value[, index, array]) {})</code></p>
<p>对数组中的每一项运行指定函数，如果该函数对每一项都返回true，则every()返回true</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isBigEnough</span>(<span class="params">element, index, array</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> element &gt;= <span class="number">10</span>;</div><div class="line">&#125;</div><div class="line">[<span class="number">12</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>].every(isBigEnough);   <span class="comment">// false</span></div><div class="line">[<span class="number">12</span>, <span class="number">54</span>, <span class="number">18</span>, <span class="number">130</span>, <span class="number">44</span>].every(isBigEnough); <span class="comment">// true</span></div></pre></td></tr></table></figure>
<p><code>.some(function(value[, index, array]) {})</code></p>
<p>对数组中的每一项运行指定函数，如果该函数对任何一项返回true，则some()返回true</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isBiggerThan10</span>(<span class="params">element, index, array</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> element &gt; <span class="number">10</span>;</div><div class="line">&#125;</div><div class="line">[<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">4</span>].some(isBiggerThan10);  <span class="comment">// false</span></div><div class="line">[<span class="number">12</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">4</span>].some(isBiggerThan10); <span class="comment">// true</span></div></pre></td></tr></table></figure>
<p><code>.forEach(function(value[, index, array]) {})</code></p>
<p>对数组中的每一项运行指定函数</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">logArrayElements</span>(<span class="params">element, index, array</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'a['</span> + index + <span class="string">'] = '</span> + element);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Notice that index 2 is skipped since there is no item at</span></div><div class="line"><span class="comment">// that position in the array.</span></div><div class="line">[<span class="number">2</span>, <span class="number">5</span>, , <span class="number">9</span>].forEach(logArrayElements);</div><div class="line"><span class="comment">// logs:</span></div><div class="line"><span class="comment">// a[0] = 2</span></div><div class="line"><span class="comment">// a[1] = 5</span></div><div class="line"><span class="comment">// a[3] = 9</span></div><div class="line"></div><div class="line"><span class="comment">// 如果在迭代过程中改变了数组，将影响接下来的迭代数据</span></div><div class="line"><span class="keyword">var</span> words = [<span class="string">"one"</span>, <span class="string">"two"</span>, <span class="string">"three"</span>, <span class="string">"four"</span>];</div><div class="line">words.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">word</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(word);</div><div class="line">  <span class="keyword">if</span> (word === <span class="string">"two"</span>) &#123;</div><div class="line">    words.shift();</div><div class="line">  &#125;</div><div class="line">&#125;);</div><div class="line"><span class="comment">// one</span></div><div class="line"><span class="comment">// two</span></div><div class="line"><span class="comment">// four</span></div></pre></td></tr></table></figure>
<p><code>.map(function(value[, index, array]) {})</code></p>
<p>对数组中的每一项运行指定函数, 返回每次函数调用的结果所组成的新数组</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> numbers = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>];</div><div class="line"><span class="keyword">var</span> doubles = numbers.map(<span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> num * <span class="number">2</span>;</div><div class="line">&#125;);</div><div class="line"><span class="comment">// doubles is now [2, 8, 18]. numbers is still [1, 4, 9]</span></div></pre></td></tr></table></figure>
<p><code>.filter(function(value[, index, array]) {})</code></p>
<p>对数组中的每一项运行指定函数, 返回函数调用返回true的项所组成的新函数</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isBigEnough</span>(<span class="params">value</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> value &gt;= <span class="number">10</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> filtered = [<span class="number">12</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>].filter(isBigEnough);</div><div class="line"><span class="comment">// filtered is [12, 130, 44]</span></div></pre></td></tr></table></figure>
<p><code>.reduce(function(previousValue, currentValue, currentIndex, array) {}[, initValue])</code></p>
<p>对数组中的每一项运行指定函数，previousValue是上一次调用函数的结果，reduce()返回最后一次调用函数的结果</p>
<p>reduce在数组为空且没有定义initialValue时，会抛出错误</p>
<p>reduce在数组只有一个元素且没有定义initialValue时，将不会执行指定函数，直接返回该元素</p>
<p>reduce在数组为空且定义initialValue时，将不会执行指定函数，直接返回initialValue</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> flattened = [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>]].reduce(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> a.concat(b);</div><div class="line">&#125;, []);</div><div class="line"><span class="comment">// flattened is [0, 1, 2, 3, 4, 5]</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数组的每一项可以保存任意类型的数据&lt;/p&gt;
&lt;h3 id=&quot;1-数组创建&quot;&gt;&lt;a href=&quot;#1-数组创建&quot; class=&quot;headerlink&quot; title=&quot;1. 数组创建&quot;&gt;&lt;/a&gt;1. 数组创建&lt;/h3&gt;&lt;p&gt;创建数组有两种方式（多使用第二种方式）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用Array构造函数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;var arr1 = new Array( &amp;quot;hello&amp;quot;, &amp;quot;world&amp;quot; );&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用字面量形式[]&lt;/p&gt;
&lt;p&gt;&lt;code&gt;var arr2 = [ &amp;quot;hello&amp;quot;, &amp;quot;world&amp;quot; ];&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 数组类型判断（若Array的toString方法被重写，则不适用）：&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isArray&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.prototype.toString.call(obj) === &lt;span class=&quot;string&quot;&gt;&#39;[object Array]&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-常用属性和方法&quot;&gt;&lt;a href=&quot;#2-常用属性和方法&quot; class=&quot;headerlink&quot; title=&quot;2. 常用属性和方法&quot;&gt;&lt;/a&gt;2. 常用属性和方法&lt;/h3&gt;&lt;h4 id=&quot;2-1-length&quot;&gt;&lt;a href=&quot;#2-1-length&quot; class=&quot;headerlink&quot; title=&quot;2.1 .length&quot;&gt;&lt;/a&gt;2.1 .length&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Length of an array&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myArray = [ &lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;world&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;!&quot;&lt;/span&gt; ];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( myArray.length ); &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Empty array&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;myArray.length = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( myArray ); &lt;span class=&quot;comment&quot;&gt;// myArray =&amp;gt; []&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// truncate array&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;myArray.length = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( myArray ); &lt;span class=&quot;comment&quot;&gt;// myArray =&amp;gt; [ &quot;hello&quot;, &quot;world&quot;]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;myArray.length = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( myArray ); &lt;span class=&quot;comment&quot;&gt;// myArray =&amp;gt; [ &quot;hello&quot;, &quot;world&quot;, &quot;!&quot;, undefined]&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-2-concat&quot;&gt;&lt;a href=&quot;#2-2-concat&quot; class=&quot;headerlink&quot; title=&quot;2.2 .concat()&quot;&gt;&lt;/a&gt;2.2 .concat()&lt;/h4&gt;&lt;p&gt;连接两个数组&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myArray = [ &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myOtherArray = [ &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; ];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; wholeArray = myArray.concat( myOtherArray ); &lt;span class=&quot;comment&quot;&gt;// [ 2, 3, 4, 5, 6, 7 ]&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Learning" scheme="http://snowgan.com/categories/Learning/"/>
    
      <category term="Javascript" scheme="http://snowgan.com/categories/Learning/Javascript/"/>
    
    
      <category term="Javascript" scheme="http://snowgan.com/tags/Javascript/"/>
    
      <category term="Array" scheme="http://snowgan.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>CSS模糊效果实践</title>
    <link href="http://snowgan.com/2016/12/01/CSS%E6%A8%A1%E7%B3%8A%E6%95%88%E6%9E%9C%E5%AE%9E%E8%B7%B5/"/>
    <id>http://snowgan.com/2016/12/01/CSS模糊效果实践/</id>
    <published>2016-12-01T02:47:51.000Z</published>
    <updated>2016-12-17T15:41:33.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="初始状态"><a href="#初始状态" class="headerlink" title="初始状态"></a>初始状态</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- html --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bgimg"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"blur"</span>&gt;</span>模糊效果测试<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- css --&gt;</span></div><div class="line">.bgimg&#123;</div><div class="line">    height: 500px;</div><div class="line">    background-image: url(bgpic6.jpg);</div><div class="line">    background-size: contain;</div><div class="line">    background-repeat: no-repeat;</div><div class="line">    overflow: hidden;</div><div class="line">&#125;</div><div class="line">.blur &#123;</div><div class="line">    width: 200px;</div><div class="line">    height: 200px;</div><div class="line">    margin: 150px 250px;</div><div class="line">    background-color: hsla(0,0%,100%,.4);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="/image/CSS模糊效果实践/001.png" alt="blur_test1"></p>
<p>这里使用hsla颜色值加透明度显示一个文字层的效果，但是并没有达到模糊的效果</p>
<a id="more"></a>
<h3 id="加入遮罩层"><a href="#加入遮罩层" class="headerlink" title="加入遮罩层"></a>加入遮罩层</h3><p>需要在文字层下方新建一个模糊层遮罩，可以在.blur元素里添加一个子元素，也可以直接添加一个伪元素</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.blur</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">150px</span> <span class="number">250px</span>;</div><div class="line">    <span class="attribute">positon</span>: relative;</div><div class="line">    <span class="attribute">z-index</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.blur</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</div><div class="line">    <span class="attribute">background-color</span>: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="/image/CSS模糊效果实践/002.png" alt="blur_test2"></p>
<p>如果在.blur:after上不设置z-index，after伪元素会遮住文字</p>
<p>z-index为负值时，会将该元素设置在第一个有定位(position非static)且设置了z-index值得父元素上，这里我们设置.blur元素为<code>position: relative; z-index: 0</code>，所以.blur:after伪元素会位于.blur元素上，text文字下，且会遮盖设置在.blur元素上的任何背景</p>
<p>如果换在.bgimg元素上设置，则.blur:after伪元素位于.bgimg元素上，.blur元素下，这时如果我们给.blur元素设置一个背景色，会发现.blur:after伪元素被完全遮盖了</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.bgimg</span> &#123;</div><div class="line">    <span class="attribute">positon</span>: relative;</div><div class="line">    <span class="attribute">z-index</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.blur</span> &#123;</div><div class="line">    <span class="comment">/* positon: relative; */</span></div><div class="line">    <span class="comment">/* z-index: 0; */</span></div><div class="line">    <span class="attribute">background-color</span>: wheat;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="/image/CSS模糊效果实践/003.png" alt="blur_test3"></p>
<h3 id="遮罩层添加背景图"><a href="#遮罩层添加背景图" class="headerlink" title="遮罩层添加背景图"></a>遮罩层添加背景图</h3><p>使用<strong>background-attachment</strong>属性的fixed值，使背景图层和遮罩层的图片完全重合。background-attachment用来设置背景图的位置是固定在视图窗口上，还是跟随元素一起滚动</p>
<p>这里设置了一个border值来突出.blur元素</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.bgimg</span>&#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</div><div class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(bgpic6.jpg);</div><div class="line">    <span class="attribute">background-size</span>: contain;</div><div class="line">    <span class="attribute">background-repeat</span>: no-repeat;</div><div class="line">    <span class="attribute">background-attachment</span>: fixed;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.blur</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</div><div class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(bgpic6.jpg);</div><div class="line">    <span class="attribute">background-size</span>: contain;</div><div class="line">    <span class="attribute">background-repeat</span>: no-repeat;</div><div class="line">    <span class="attribute">background-attachment</span>: fixed;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="/image/CSS模糊效果实践/004.png" alt="blur_test4"></p>
<h3 id="使用filter-blur-实现模糊效果"><a href="#使用filter-blur-实现模糊效果" class="headerlink" title="使用filter: blur()实现模糊效果"></a>使用filter: blur()实现模糊效果</h3><p><code>filter: blur(5px)</code>指定一个模糊半径，可以非常方便地实现模糊效果。但只能在高级浏览器下使用，IE不兼容</p>
<p>该模糊效果会在边缘弱化，所以设置遮罩层的margin为负值使其size大于.blur元素，再在.blur元素上设置<code>overflow: hidden</code>切掉超出部分，可得到一个理想的模糊效果</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.blur</span> &#123;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.blur</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">filter</span>: <span class="built_in">blur</span>(5px);</div><div class="line">    <span class="attribute">margin</span>: -<span class="number">10px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="/image/CSS模糊效果实践/005.png" alt="blur_test5"></p>
<h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- html --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bgimg"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"blur"</span>&gt;</span>模糊效果测试<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- css --&gt;</span></div><div class="line">.bgimg&#123;</div><div class="line">    height: 500px;</div><div class="line">    background-image: url(bgpic6.jpg);</div><div class="line">    background-size: contain;</div><div class="line">    background-repeat: no-repeat;</div><div class="line">    background-attachment: fixed;</div><div class="line">    overflow: hidden;</div><div class="line">&#125;</div><div class="line">.blur &#123;</div><div class="line">    width: 200px;</div><div class="line">    height: 200px;</div><div class="line">    margin: 150px 250px;</div><div class="line">    position: relative;</div><div class="line">    z-index: 2;</div><div class="line">    overflow: hidden;</div><div class="line">&#125;</div><div class="line">.blur:after &#123;</div><div class="line">    content: '';</div><div class="line">    position: absolute;</div><div class="line">    top: 0;</div><div class="line">    bottom: 0;</div><div class="line">    left: 0;</div><div class="line">    right: 0;</div><div class="line">    z-index: -1;</div><div class="line">    background-image: url(bgpic6.jpg);</div><div class="line">    background-size: contain;</div><div class="line">    background-repeat: no-repeat;</div><div class="line">    background-attachment: fixed;</div><div class="line">    filter: blur(5px);</div><div class="line">    margin: -10px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p>参考文章：</p>
<ol>
<li><a href="http://www.w3cplus.com/css3/css-secrets/frosted-glass-effect.html" target="_blank" rel="external">CSS秘密花园:磨砂玻璃效果</a></li>
<li><a href="http://www.zhangxinxu.com/wordpress/2012/03/zindex%E8%B4%9F%E5%80%BC-%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D-%E6%96%87%E5%AD%97%E9%9A%90%E8%97%8F/" target="_blank" rel="external">你到了第几层？图片式标题、按钮与隐藏文本</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;初始状态&quot;&gt;&lt;a href=&quot;#初始状态&quot; class=&quot;headerlink&quot; title=&quot;初始状态&quot;&gt;&lt;/a&gt;初始状态&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- html --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;bgimg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;blur&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;模糊效果测试&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- css --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.bgimg&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height: 500px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background-image: url(bgpic6.jpg);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background-size: contain;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background-repeat: no-repeat;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    overflow: hidden;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.blur &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width: 200px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height: 200px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin: 150px 250px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background-color: hsla(0,0%,100%,.4);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/image/CSS模糊效果实践/001.png&quot; alt=&quot;blur_test1&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里使用hsla颜色值加透明度显示一个文字层的效果，但是并没有达到模糊的效果&lt;/p&gt;
    
    </summary>
    
      <category term="Learning" scheme="http://snowgan.com/categories/Learning/"/>
    
      <category term="CSS" scheme="http://snowgan.com/categories/Learning/CSS/"/>
    
    
      <category term="CSS" scheme="http://snowgan.com/tags/CSS/"/>
    
  </entry>
  
</feed>
